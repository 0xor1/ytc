#!/bin/bash

docker ps --format '{{.Names}}' | grep "^ytc-" | awk '{print $1}' | xargs -I {} docker stop {}

if [ "$1" == "nuke" ]; then
    docker compose -f docker/docker-compose.yml down --rmi all
fi

docker compose -f docker/docker-compose.yml up -d

./bin/wait-for-it -t 5 127.0.0.1:6379 -- echo "redis ready"
./bin/wait-for-it -t 5 127.0.0.1:9000 -- echo "minio ready"
./bin/wait-for-it -t 5 127.0.0.1:3306 -- echo "mariadb ready"

dotnet tool restore
dotnet build
dotnet test --no-build --blame-hang-timeout 600000 -v n -p:CollectCoverage="true" -p:CoverletOutputFormat="cobertura" -p:Exclude="[*]System.Text.RegularExpressions.Generated.*" -p:ExcludeByFile="**/RegexGenerator.g.cs"

if [ "$1" == "gh-actions" ]; then 
  curl -L https://coveralls.io/coveralls-linux.tar.gz | tar -xz
  #./coveralls report Ytc.Client.Test/coverage.cobertura.xml
  ./coveralls report Ytc.Eps.Test/coverage.cobertura.xml
else
  dotnet tool install -g dotnet-reportgenerator-globaltool
  rm -r test_coverage
  reportgenerator -reports:"*\coverage.cobertura.xml" -targetdir:"test_coverage" -reporttypes:Html
  rm */coverage.cobertura.xml
  rm -r */TestResults
fi

docker compose -f docker/docker-compose.yml stop